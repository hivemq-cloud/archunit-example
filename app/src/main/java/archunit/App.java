/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package archunit;

import com.tngtech.archunit.core.domain.JavaClasses;
import com.tngtech.archunit.core.importer.ClassFileImporter;
import com.tngtech.archunit.lang.ArchRule;
import de.codepitbull.annotations.Controller;
import de.codepitbull.annotations.Service;
import org.w3c.dom.stylesheets.LinkStyle;

import java.util.List;

import static com.tngtech.archunit.lang.syntax.ArchRuleDefinition.classes;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        var rulesModule1 = makeRule("de.codepitbull.module1");
        var rulesModule2 = makeRule("de.codepitbull.module2");

        JavaClasses importedClasses = new ClassFileImporter().importPackages("de.codepitbull");
        rulesModule1.forEach(rule -> rule.check(importedClasses));
        rulesModule2.forEach(rule -> rule.check(importedClasses));
    }

    public static List<ArchRule> makeRule(String modulePackage) {
        return List.of(
                classes()
                    .that()
                        .resideInAPackage(modulePackage)
                    .should().beAnnotatedWith(Controller.class).orShould().beAnnotatedWith(Service.class),
                classes()
                .that()
                    .resideOutsideOfPackage(modulePackage)
                .should().onlyDependOnClassesThat().resideOutsideOfPackage(modulePackage + ".internal.."));
    }
}
